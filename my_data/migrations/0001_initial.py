# Generated by Django 3.0.7 on 2021-10-15 10:32

import ckeditor_uploader.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cname', models.CharField(max_length=128, verbose_name='数据分类')),
            ],
            options={
                'verbose_name': '数据分类',
                'verbose_name_plural': '数据分类',
            },
        ),
        migrations.CreateModel(
            name='Tag_name',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tname', models.CharField(max_length=128, verbose_name='数据标签')),
            ],
            options={
                'verbose_name': '数据标签',
                'verbose_name_plural': '数据标签',
            },
        ),
        migrations.CreateModel(
            name='My_data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标题')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='正文')),
                ('img', models.ImageField(blank=True, null=True, upload_to='blog_images', verbose_name='配图')),
                ('abstract', models.TextField(blank=True, max_length=256, null=True, verbose_name='摘要')),
                ('visiting', models.PositiveIntegerField(default=0, verbose_name='访问量')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创造时间')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='修改时间')),
                ('category', models.ManyToManyField(to='my_data.Classification', verbose_name='分类')),
                ('tags', models.ManyToManyField(to='my_data.Tag_name', verbose_name='标签')),
            ],
            options={
                'verbose_name': '我的数据',
                'verbose_name_plural': '我的数据',
                'ordering': ['-created_time'],
            },
        ),
    ]
